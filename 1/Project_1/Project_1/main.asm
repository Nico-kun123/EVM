;
; Project_1.asm
;
; Created: 16.02.2022 12:15:08
; Author : 413
;

; A + (B - 2*C):

ldi r31, 22		// A
ldi r30, 142	// B
ldi r29, 63		// C
ldi r27, 48		// D
ldi r26, 2		// E
ldi r16, 2		// Константа 2

mul r16, r29	// 2 * C. В регистр r0 запишется значение 0x7E (126)
mov r19, r0		// Перенос значения умножения из регистра r0 в регистр r19
sub r30, r19	// B - 2*C. В регистр r30 запишется значение 0x10 (16)
add r31, r30	// A + (B - 2*C). В регистр r31 запишется значение 0x26 (38)
mov r28, r31 	// Находим функцию F, записываем это значение из регистра r31 в регистр r28 

cp r28, r27		// Сравнение чисел F и D
				// F = 38, D = 48
brsh SMALLER	// Если условие F > D истинно, то I = 9
				// Если условие F > D ложно, то I = 12
	ldi r25, 12	// I = 12
	rjmp END1
SMALLER:
	ldi r25, 9	// I = 9
END1:
	nop

mul r26, r25		// Умножение числа без знака (I*E = 12*2 = 24 = 0x18). Результат запишется в регистр r0
mov r17, r0 		// Перенос значения умножения I*E из регистра r0 в регистр r17
				
CYCLE:				// Проверка бита на 1 или 0
	bst r17, 6		// Сохранить бит №6 регистра r17 во флаге T
	bld r22, 6		// Загрузить T в бит №6 регистра r22
	
	cpi r22, 0		// Сравниваем бит №6 с константой
	brsh RESULT
		ldi r20, 1	// Загрузить константу в итоговый регистр
		rjmp END2
RESULT:
		ldi r20, 0	// Загрузить константу в итоговый регистр
		rjmp END2
END2:
	Nop

	// SER r20
	// SBRS r0,2
	// CLR r20
	// nop
